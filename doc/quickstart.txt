EmuLinker Kaillera Server - Quick Start Guide For Server Administrators
=======================================================================

* Download and install Java (J2SE) ver 5.0 or greater from http://java.sun.com

  You can use the JDK or JRE, but JDK performance is better.  Java 5 is the 
  same as Java 1.5, JDK is the same as SDK.  You want J2SE NOT J2EE.  You do 
  NOT need the NetBeans version.

  Alternatively, you can use BEA's JRockit 5.0 for even better performance:
  http://www.bea.com/content/products/jrockit/index.htm
  
* Edit the file conf/emulinker.cfg to configure your general server properties.

  emulinker.cfg contains settings like server ports, max users, max ping,
  public/private, master list name, etc.  See file for details and examples.

* Edit the file conf/access.cfg to configure access settings and filters.

  access.cfg contains user privileges, ip addresses access, and game and 
  emulator filters.  Using the filters in this file you can run a server 
  that only allows a specific game, or that restrict a game or emulator, or 
  any combination of these.  This file is monitored for changes so you do not 
  need to restart the server to pickup changes. See file for details and 
  examples.

* Optional: Edit the file conf/language_en.properties to customize any of the 
  server prompts and text.  Alternatively you can create a new foreign language 
  translation file named for the language, language_fr.properties for a french 
  language translation.  See language_en.properties for more information.

* Configure your firewall to allow inbound UDP access to the ports configured 
  in emulinker.cfg.  By default this is port 27888 and 27889 through 27914.  
  You MUST allow all these ports; allowing only 27888 will not work.  Only UDP 
  access is required; the server does not use TCP.

* On Linux or Unix, you'll need to set execute permission on the shell scripts 
  by running: chmod a+x *.sh
  
* Figure out which script you'll use to start the server.  There are various 
  scripts included.  On Windows use a .bat file, on Unix or Linux use a .sh.  
  If you only have the Java JRE not the JDK, use a server-jre script.  Also, 
  if you are using Linux Kernel 2.4 or older, use the server-linux2.4 script.**
  
  ** There is a bug in Linux kernel 2.4 and older that will cause the server to 
  lockup after running for a while.  You can prevent this by running the 
  server-linux2.4.sh script, the but performance isn't as good as the regular 
  script on 2.6 kernel.  Upgrade to the 2.6 if you can.  You can find out 
  which kernel you are running by typing "uname -r".

* EmuLinker MUST be able to find the java executable on your computer.  You
  can do this by putting the java bin directory in the PATH, or by editing your 
  startup script to set the full path to java.  

  For example, on Windows your startup script may begin like this:

   c:\jdk1.5.0\bin\java -Xms64m -Xmx128m -Xincgc ...

  Or if Java is in your Program Files directory:

   "c:\Program Files\Java\jre1.5.0\bin\java.exe" -Xms64m -Xmx128m -Xincgc ...

  On Linux or Unix, your startup script may begin like this:

   /usr/bin/java -Xms64m -Xmx128m -Xincgc ...

* Optional: Edit your startup script to configure your memory settings.

  Notice the "-Xms64m -Xmx128m" settings.

  These parameters tell Java the minimum and maximum amount of memory to use. 
  The default starts with 64 megs and grows to 128 megs, but you can adjust 
  these based on your available memory for better server performance.  The 
  more memory you give it the better.  Minimum required is 64 megs.

* To start the server on Windows, simply run server.bat if you are using the 
  Java JDK, or server-jre.bat if you are using the Java JRE.  JDK performance 
  is better than JRE.

  On Linux you can use the start-server.sh to force the server to run as 
  a daemon process.  If you are using a startup script other than server.sh, 
  edit start-server.sh to change the script name.  
  
* On Linux you can use the stop-server.sh script to stop the server nicely, or 
  the kill-server.sh script to kill the immediately.  On Windows you can just 
  hit control-c to stop the server, or close the window.

If the server starts correctly, you should see "Server Starting..." and 
"Server is Running".  The most common problems are caused by not being able to 
find java, or formatting mistakes in emulinker.cfg.  On Linux, look in the 
file error.log for errors.  On Windows, errors will be written to the screen.

All logs are written to a file named emulinker.log, which will automatically
rotate every 10 megs.  You can change the log file name and settings by 
editing the file conf/log4j.properties.

Last Updated: 02/18/2006
